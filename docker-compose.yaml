version: "3.5"

services:
    jaeger-collector:
        container_name: jaeger-collector
        image: jaegertracing/jaeger-collector:1.21
        command: [
        "--log-level=debug",
        "--es.num-shards=1",
        "--es.num-replicas=0", 
        "--es.server-urls=http://elasticsearch:9200", 
        "--collector.zipkin.host-port=:9411"
        ]
        ports:
            - "14269"
            - "9411:9411"
            - 14250 # used by jaeger-agent to send spans in model.proto format
            - 14268:14268 # can accept spans directly from clients in jaeger.thrift format over binary thrift protocol
        environment:
            - SPAN_STORAGE_TYPE=elasticsearch
        restart: on-failure
        depends_on:
            - elasticsearch
    
    jaeger-agent: 
        container_name: jaeger-agent
        image: jaegertracing/jaeger-agent:1.21
        command: [
            "--reporter.grpc.host-port=jaeger-collector:14250",
            "--log-level=debug",
            "--reporter.grpc.retry.max=1000"
        ]
        ports:
            - "5775:5775/udp"
            - "6831:6831/udp"
            - "6832:6832/udp"
            - "5778:5778"
        restart: on-failure
        depends_on:
            - jaeger-collector

    jaeger-query:
        container_name: jaeger-query
        image: jaegertracing/jaeger-query:1.21
        command: [
            "--es.server-urls=http://elasticsearch:9200",
            "--span-storage.type=elasticsearch",
            "--log-level=debug",
            "--query.max-clock-skew-adjustment=0s"
        ]
        ports:
            - 16686:16686
        restart: on-failure
        environment:
            SPAN_STORAGE_TYPE: "elasticsearch"
            COLLECTOR_ZIPKIN_HOST_PORT: 9412
            JAEGER_DISABLED: "false"
            JAEGER_ENDPOINT: "http://jaeger-collector:14268/api/traces"
        depends_on:
            - elasticsearch

    # logstash:
    #     image: docker.elastic.co/logstash/logstash:6.3.0
    #     links:
    #         - elasticsearch

    elasticsearch:
        container_name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
        ports:
            - 9200:9200
            - 9300:9300
        restart: on-failure
        environment:
            - discovery.type=single-node
            - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    
    # kibana:
    #     container_name: kibana
    #     image: docker.elastic.co/kibana/kibana:7.10.0
    #     ports:
    #         - 5601:5601
    #     environment:
    #         ELASTICSEARCH_URL: http://elasticsearch:9200
    #         ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    #     depends_on:
    #         - elasticsearch

    # spring:
    #     container_name: spring-server
    #     build:
    #         context: ./Spring/docker
    #         dockerfile: Dockerfile
    #     ports:
    #         - "8080:8080"
    #     environment:
    #         JAEGER_AGENT_HOST: jaeger-agent
    #         JAEGER_AGENT_PORT: 6831
    #     depends_on: 
    #         - jaeger-agent

    api-gateway:
        container_name: API-Gateway
        build:
            context: ./Nodejs/API-Gateway/
            dockerfile: Dockerfile
        volumes:
          - ./Nodejs/API-Gateway:/app
        ports:
            - "8081:8081"
        environment:
            JAEGER_AGENT_HOST: jaeger-agent
            JAEGER_AGENT_PORT: 6831
        depends_on: 
            - jaeger-agent

    
    order-service:
        container_name: OrderService
        build:
            context: ./Nodejs/OrderService/
            dockerfile: Dockerfile
        ports:
            - "8082:8082"
        volumes:
          - ./Nodejs/OrderService:/app
        environment:
            JAEGER_AGENT_HOST: jaeger-agent
            JAEGER_AGENT_PORT: 6831
        depends_on: 
            - jaeger-agent

    product-service:
        container_name: ProductService
        build:
            context: ./Nodejs/ProductService/
            dockerfile: Dockerfile
        ports:
            - "8083:8083"
        volumes:
          - ./Nodejs/ProductService:/app
        environment:
            JAEGER_AGENT_HOST: jaeger-agent
            JAEGER_AGENT_PORT: 6831
        depends_on: 
            - jaeger-agent


    mongodb-auth:
        image: mongo:4.2.3-bionic
        container_name: mongodb-auth
        # volumes: 
        #     - ./Nodejs/API-Gateway/mongo-data:/data/db
        ports:
            - 27017:27017

    mongodb-product:
        image: mongo:4.2.3-bionic
        container_name: mongodb-product
        # volumes: 
        #     - ./Nodejs/ProductService/mongo-data:/data/db
        ports:
            - 27018:27017

    mongodb-order:
        image: mongo:4.2.3-bionic
        container_name: mongodb-order
        # volumes: 
        #     - ./Nodejs/OrderService/mongo-data:/data/db
        ports:
            - 27019:27017
      